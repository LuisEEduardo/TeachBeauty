// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechBeauty.Dados;

namespace TechBeauty.Dados.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211111164300_techBeautyAtualizacao2")]
    partial class techBeautyAtualizacao2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColaboradorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("SMALLDATETIME");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("SMALLDATETIME");

                    b.Property<DateTime>("DataHoraTermino")
                        .HasColumnType("SMALLDATETIME");

                    b.Property<int>("OrdemServicoID")
                        .HasColumnType("int");

                    b.Property<int>("PagamentoClienteID")
                        .HasColumnType("int");

                    b.Property<string>("PessoaAtendia")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorID");

                    b.HasIndex("OrdemServicoID");

                    b.HasIndex("PagamentoClienteID");

                    b.HasIndex("ServicoID");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorEmCaixa")
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal>("ValorMovimentado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.CargoContratoTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoID")
                        .HasColumnType("int");

                    b.Property<int>("ContratoDeTrabalhoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoID");

                    b.HasIndex("ContratoDeTrabalhoID");

                    b.ToTable("CargoContratoTrabalho");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PessoaID")
                        .HasColumnType("int");

                    b.Property<int>("TipoContatoID")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaID");

                    b.HasIndex("TipoContatoID");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.ContratoTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CnpjCTPS")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<int>("ColaboradorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataDesligamento")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("Date");

                    b.Property<int>("RegimeContratualID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorID");

                    b.HasIndex("RegimeContratualID");

                    b.ToTable("ContratoTrabalho");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Complemento")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("CHAR(2)");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Escala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColaboradorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraEntrada")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataHoraSaida")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorID");

                    b.ToTable("Escala");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.FechamentoDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaixaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFechamento")
                        .HasColumnType("DATE");

                    b.Property<decimal>("ValorFechamento")
                        .HasColumnType("DECIMAL(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("CaixaID");

                    b.ToTable("FechamentoDiario");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.FormasPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("FormasPagamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.LogAgendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgendamentoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("SMALLDATETIME");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoID");

                    b.ToTable("LogAgendamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoTotal")
                        .HasColumnType("INT");

                    b.Property<int>("PagamentoClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PagamentoClienteId");

                    b.ToTable("OrdemServico");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DiaPagamento")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("FechamentoDiarioId")
                        .HasColumnType("int");

                    b.Property<int?>("FormasPagamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pagamento")
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("FechamentoDiarioId");

                    b.HasIndex("FormasPagamentoId");

                    b.ToTable("PagamentoCliente");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoClienteFechamentoDiario", b =>
                {
                    b.Property<int>("FechamentoDiarioID")
                        .HasColumnType("int");

                    b.Property<int>("PagamentoClienteID")
                        .HasColumnType("int");

                    b.HasKey("FechamentoDiarioID", "PagamentoClienteID");

                    b.HasIndex("PagamentoClienteID");

                    b.ToTable("PagamentoClienteFechamentoDiario");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoClienteFormasPagamento", b =>
                {
                    b.Property<int>("PagamentoClienteID")
                        .HasColumnType("int");

                    b.Property<int>("FormasPagamentoID")
                        .HasColumnType("int");

                    b.HasKey("PagamentoClienteID", "FormasPagamentoID");

                    b.HasIndex("FormasPagamentoID");

                    b.ToTable("PagamentoClienteFormasPagamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoColaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaixaID")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("FormasPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("INT");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CaixaID");

                    b.HasIndex("FormasPagamentoId");

                    b.ToTable("PagamentoColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.RegimeContratual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("RegimeContratual");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<int>("DuracaoEmMin")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(6,2)");

                    b.HasKey("Id");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.ServicoColaborador", b =>
                {
                    b.Property<int>("ServicoID")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorID")
                        .HasColumnType("int");

                    b.HasKey("ServicoID", "ColaboradorID");

                    b.HasIndex("ColaboradorID");

                    b.ToTable("ServicoColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.TipoContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("TipoContato");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Cliente", b =>
                {
                    b.HasBaseType("TechBeauty.Dominio.Modelo.Pessoa");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Colaborador", b =>
                {
                    b.HasBaseType("TechBeauty.Dominio.Modelo.Pessoa");

                    b.Property<int>("CaixaId")
                        .HasColumnType("int");

                    b.Property<int>("ContratoTrabalhoID")
                        .HasColumnType("int");

                    b.Property<int>("EnderecoID")
                        .HasColumnType("int");

                    b.Property<int>("GeneroID")
                        .HasColumnType("int");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("PagamentoColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("PorcentagemComissao")
                        .HasColumnType("INT");

                    b.Property<decimal>("Salario")
                        .HasColumnType("DECIMAL(6,2)");

                    b.HasIndex("CaixaId");

                    b.HasIndex("EnderecoID");

                    b.HasIndex("GeneroID");

                    b.HasIndex("PagamentoColaboradorId");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Agendamento", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Colaborador", "Colaborador")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.OrdemServico", "OS")
                        .WithMany("Agendamentos")
                        .HasForeignKey("OrdemServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.PagamentoCliente", "PagamentoCliente")
                        .WithMany()
                        .HasForeignKey("PagamentoClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.Servico", "Servico")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("OS");

                    b.Navigation("PagamentoCliente");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.CargoContratoTrabalho", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Cargo", "Cargo")
                        .WithMany("CargoContratoTrabalhos")
                        .HasForeignKey("CargoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.ContratoTrabalho", "ContratoTrabalho")
                        .WithMany("CargosContratosTrabalho")
                        .HasForeignKey("ContratoDeTrabalhoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("ContratoTrabalho");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Contato", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Pessoa", "Pessoa")
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.TipoContato", "Tipo")
                        .WithMany("Contatos")
                        .HasForeignKey("TipoContatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.ContratoTrabalho", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Colaborador", "Colaborador")
                        .WithMany("ContratoTrabalho")
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.RegimeContratual", "RegimeContratual")
                        .WithMany("ContratosDeTrabalho")
                        .HasForeignKey("RegimeContratualID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("RegimeContratual");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Escala", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Colaborador", "Colaborador")
                        .WithMany("Escalas")
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.FechamentoDiario", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Caixa", "Caixa")
                        .WithMany("FechamentosDiario")
                        .HasForeignKey("CaixaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.LogAgendamento", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Agendamento", "Agendamento")
                        .WithMany("LogsAgendamento")
                        .HasForeignKey("AgendamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.OrdemServico", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Cliente", "Cliente")
                        .WithMany("OrdensServico")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.PagamentoCliente", "PagamentoCliente")
                        .WithMany("OS")
                        .HasForeignKey("PagamentoClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PagamentoCliente");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoCliente", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.FechamentoDiario", null)
                        .WithMany("Pagamentos")
                        .HasForeignKey("FechamentoDiarioId");

                    b.HasOne("TechBeauty.Dominio.Modelo.FormasPagamento", "FormasPagamento")
                        .WithMany()
                        .HasForeignKey("FormasPagamentoId");

                    b.Navigation("Colaborador");

                    b.Navigation("FormasPagamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoClienteFechamentoDiario", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.FechamentoDiario", "FechamentoDiario")
                        .WithMany("PagamentoClienteFechamentoDiario")
                        .HasForeignKey("FechamentoDiarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.PagamentoCliente", "PagamentoCliente")
                        .WithMany("PagamentoClienteFechamentoDiario")
                        .HasForeignKey("PagamentoClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FechamentoDiario");

                    b.Navigation("PagamentoCliente");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoClienteFormasPagamento", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.FormasPagamento", "FormasPagamento")
                        .WithMany("pagamentoClienteFormasPagamentos")
                        .HasForeignKey("FormasPagamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.PagamentoCliente", "PagamentoCliente")
                        .WithMany("PagamentoClienteFormasPagamento")
                        .HasForeignKey("PagamentoClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormasPagamento");

                    b.Navigation("PagamentoCliente");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoColaborador", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Caixa", "Caixa")
                        .WithMany("PagamentoColaborador")
                        .HasForeignKey("CaixaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.FormasPagamento", null)
                        .WithMany("PagamentosColaborador")
                        .HasForeignKey("FormasPagamentoId");

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.ServicoColaborador", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Colaborador", "Colaborador")
                        .WithMany("ServicosColaborador")
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.Servico", "Servico")
                        .WithMany("ServicosColaborador")
                        .HasForeignKey("ServicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Cliente", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("TechBeauty.Dominio.Modelo.Cliente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Colaborador", b =>
                {
                    b.HasOne("TechBeauty.Dominio.Modelo.Caixa", "Caixa")
                        .WithMany("Colaborador")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.Endereco", "Endereco")
                        .WithMany("Colaboradores")
                        .HasForeignKey("EnderecoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.Genero", "Genero")
                        .WithMany("Colaboradores")
                        .HasForeignKey("GeneroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("TechBeauty.Dominio.Modelo.Colaborador", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TechBeauty.Dominio.Modelo.PagamentoColaborador", "PagamentoColaborador")
                        .WithMany("Colaboradores")
                        .HasForeignKey("PagamentoColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");

                    b.Navigation("Endereco");

                    b.Navigation("Genero");

                    b.Navigation("PagamentoColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Agendamento", b =>
                {
                    b.Navigation("LogsAgendamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Caixa", b =>
                {
                    b.Navigation("Colaborador");

                    b.Navigation("FechamentosDiario");

                    b.Navigation("PagamentoColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Cargo", b =>
                {
                    b.Navigation("CargoContratoTrabalhos");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.ContratoTrabalho", b =>
                {
                    b.Navigation("CargosContratosTrabalho");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Endereco", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.FechamentoDiario", b =>
                {
                    b.Navigation("PagamentoClienteFechamentoDiario");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.FormasPagamento", b =>
                {
                    b.Navigation("pagamentoClienteFormasPagamentos");

                    b.Navigation("PagamentosColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Genero", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.OrdemServico", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoCliente", b =>
                {
                    b.Navigation("OS");

                    b.Navigation("PagamentoClienteFechamentoDiario");

                    b.Navigation("PagamentoClienteFormasPagamento");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.PagamentoColaborador", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Pessoa", b =>
                {
                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.RegimeContratual", b =>
                {
                    b.Navigation("ContratosDeTrabalho");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Servico", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("ServicosColaborador");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.TipoContato", b =>
                {
                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Cliente", b =>
                {
                    b.Navigation("OrdensServico");
                });

            modelBuilder.Entity("TechBeauty.Dominio.Modelo.Colaborador", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("ContratoTrabalho");

                    b.Navigation("Escalas");

                    b.Navigation("ServicosColaborador");
                });
#pragma warning restore 612, 618
        }
    }
}
